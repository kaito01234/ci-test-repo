name: Create Review Environment
on:
  workflow_dispatch:
    inputs:
      pull_request_number:
        type: string
        required: true
        description: 'Pull request number (↑Branchの選択もお忘れなく)'
      slack_notify:
        type: boolean
        required: true
        description: 'デプロイの完了をSlackに通知する'
  issue_comment:
    types: [created, edited]

jobs:
  create_review_env:
    name: Create Review Env
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'issue_comment' ||
      (
        github.event_name == 'issue_comment' &&
        contains(github.event.comment.html_url, '/pull/') &&
        startsWith(github.event.comment.body, '/deploy')
      )

    steps:
      - name: Checkout (workflow_dispatch)
        if: github.event_name != 'issue_comment'
        uses: actions/checkout@v3
        with:
          clean: false

      - name: get upstream branch (issue_comment)
        if: github.event_name == 'issue_comment'
        id: upstreambranch
        run: |
          echo "PR_BRANCH=$(curl -H "Authorization: token ${GITHUB_TOKEN}" ${PULL_REQUEST_URL} | jq '.head.ref' | sed 's/\"//g')" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_URL: ${{ github.event.issue.pull_request.url }}

      - name: Checkout (issue_comment)
        if: github.event_name == 'issue_comment'
        uses: actions/checkout@v3
        with:
          ref: ${{ env.PR_BRANCH }}
          clean: false

      - name: Set environment (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
          echo "SLACK_NOTIFY=${SLACK_NOTIFY}" >> $GITHUB_ENV
        env:
          PR_NUMBER: ${{ github.event.inputs.pull_request_number }}
          SLACK_NOTIFY: ${{ github.event.inputs.slack_notify }}

      - name: Set environment (issue_comment)
        if: github.event_name == 'issue_comment'
        run: |
          echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
          echo "SLACK_NOTIFY=${ISSUE_COMMENT}" >> $GITHUB_ENV
        env:
          PR_NUMBER: ${{ github.event.issue.number }}
          ISSUE_COMMENT: ${{ github.event.comment.body }}

      - name: echo inputs parameter
        run: |
          echo "BRANCH: ${BRANCH}"
          echo "PR_NUMBER: ${PR_NUMBER}"
          echo "SLACK_NOTIFY: ${SLACK_NOTIFY}"
          echo ${{ github.sha }}
        env:
          BRANCH: ${{ github.ref_name }}
          PR_NUMBER: ${{ env.PR_NUMBER }}
          SLACK_NOTIFY: ${{ env.SLACK_NOTIFY }}
